<script type="text/javascript" src='https://maps.google.com/maps/api/js?key=AIzaSyBqAlo6eTQeSbkOn3xYIjJ4e1zr4ewrSxU&sensor=false&libraries=places'></script>
<!-- dropdown -->
<%= stylesheet_link_tag "semantic.min" %>
<%= javascript_include_tag "semantic.min" %>
<%= javascript_include_tag "plupload.full.min.js" %>
<%= javascript_include_tag "jquery.plupload.queue.min" %>
<%= stylesheet_link_tag "jquery.plupload.queue" %>
<%= stylesheet_link_tag  'gallery/cubeportfolio.min' %>
<%= javascript_include_tag 'gallery/jquery.cubeportfolio.min'%>
<% @top_title = "استودیوی شما" %>
<% title = "مدیریت رشته " +  @shoot_type.title %>
<%= render 'shared/studio_header' , title: title %>

<section id="main">
  <div class="container">
    <div class="main">
      <div class="wrapper">
        <div class="row">
          <div style="margin-bottom: 50px">
            <%= render 'shared/studio_top_navigation' %>
          </div>
          <!-- Nav tabs -->
          <ul class="nav nav-tabs" role="tablist">
            <li role="presentation" >
              <a href="<%=page_setting_photographer_path(@photographer)%>" >
                <h5>
                  <span class="fa fa-user-plus" style="font-size: 20px;">
                  </span>
                  عکس بیشتر پروفایل
                </h5>
              </a>
            </li>
            <li role="presentation" class="active">
              <a href="#shoot_types" aria-controls="shoot_types" id="checkout-animate-color" role="tab" data-toggle="tab">
                <h5>
                  <span class="fa fa-cogs" style="font-size: 20px;">
                  </span>
                  نمونه کارها و اکسسوری (جدید)
                </h5>
              </a>
            </li>
            <li role="presentation">
              <a href="<%=page_setting_photographer_path(@photographer)%>">
                <h5>
                  <span class="fa fa-sort" style="font-size: 20px;">
                  </span>
                  ترتیب رشته ها
                </h5>
              </a>
            </li>
          </ul>
          <!-- Tab panes -->
          <div class="col-xs-12" style="margin-top:2em;">
            <h2 class="text-center">
              <span class="fa fa-sort" style="font-size: 30px;"></span>
              مدیریت نمونه کارها و اکسسوری ها
            </h2>
            <%= link_to page_setting_photographer_path(@photographer,:anchor => "profile"),class:"btn btn-default pull-left" do %>
            <span class="fa fa-arrow-left"></span>
            انتخاب رشته دیگری
            <% end %>
            <br>
            <p style="text-align: justify; font-size: 15px;">
              در اینجا می توانید نمونه کارهای و اکسسوری هایی که دارید را برای جذب مشتری بیشتر قرار دهید.
            </p>
            <!-- Nav tabs -->
            <ul class="nav nav-tabs nav-justified">
              <li role="presentation" class="active">
                <a href="#home" aria-controls="home" role="tab" data-toggle="tab">
                  نمونه کارهای
                  <%= @shoot_type.title%> من
                </a></li>
                <% if Expertise.find_by(shoot_type_id: @shoot_type , photographer_id: @photographer.id).present? %>
                <li role="presentation"><a href="#profile" aria-controls="profile" role="tab" data-toggle="tab">
                  اکسسوری های
                  <%= @shoot_type.title%> من
                </a></li>
                <% end %>
              </ul>
              <!-- Tab panes -->
              <div class="tab-content" style="margin-top:5%">
                <div role="tabpanel" class="tab-pane active" id="home">
                  <div class="wrapper">
                    <div class="col-xs-12" id="filelist">
                      <div class="alert alert-warning">
                        <p>حداکثر سایز هر عکس ۵ مگابایت باید باشد.</p>
                      </div>
                      <div id="uploader">
                        <p>Your browser doesn't have Flash, Silverlight or HTML5 support.</p>
                      </div>
                    </div>
                    <div class="col-xs-12" id="grid-container" style="padding-top: 5%;">
                      <div id="js-grid-masonry" class="cbp">
                        <% @expertise.photos.order("created_at DESC").each do |f| %>
                        <div class="cbp-item identity">
                          <a href='<%=f.file_url(:medium)%>' class="cbp-caption cbp-lightbox" data-title="<%=f.expertise.shoot_type.title%><br>توسط <%=f.expertise.photographer.display_name%>">
                            <div class="cbp-caption-defaultWrap">
                              <%= cl_image_tag(f.file_url(:medium), :height => 300,:width=> 300, :crop => :fit, :quality => 50)%>
                            </div>
                            <div class="cbp-caption-activeWrap">
                              <div class="cbp-l-caption-alignCenter">
                                <div class="cbp-l-caption-body">
                                  <div class="cbp-l-caption-title"> <%= f.id %>
                                  </div>
                                </div>
                              </div>
                            </div>
                          </a>
                          <button id="remove-button-<%= f.id %>" class="btn btn-danger btn-block" type="button" name="button" onclick="remove_photo(<%= f.id %>,'/photos/<%=f.id %>');">حذف</button>
                        </div>
                        <% end %>
                      </div>
                    </div>
                  </div>
                </div>
                <div role="tabpanel" class="tab-pane" id="profile">
                  <div class="wrapper">
                    <div class="row" style="margin-bottom: 30px;">
                      <div class="col-sm-12">
                        <p class="text-right text-success">
                          اکسسوری هایی که برای این رشته دارید را ثبت کنید.
                          <br>
                          این به ما کمک می کند شما را به پروژه های مرتبط تر معرفی کنیم.
                        </p>
                      </div>
                    </div>
                    <div class="row">
                      <div class="col-sm-12">
                        <% @counter = 1 %>
                        <% ew = ExpertiseWidget.joins(:expertise => :photographer).where(expertise_id: @expertise.id, photographers: {id: @photographer.id}) %>
                        <% if ew.any? %>
                        <table id="table" class="table table-dark">
                          <thead>
                            <tr>
                              <th scope="col">#</th>
                              <th scope="col">نام بزار</th>
                              <th scope="col">عکس</th>
                              <th scope="col">ثبت</th>
                            </tr>
                          </thead>
                          <tbody id="tbody-table">
                            <% ew.each do |ew| %>
                            <%=render partial: '/expertise_widgets/show_in_table' , :locals => {:expertise_widget => ew, :counter => @counter}%>
                            <% @counter = @counter + 1 %>
                            <% end %>
                          </tbody>
                        </table>
                        <% else %>
                        <p class="alert alert-warning text-center">متاسفانه شماهیچ اکسسوری ثبت شده ای ندارید!</p>
                        <% end %>
                        <button id="add-button-form" class="btn btn-success btn-lg" type="button" name="button" onclick="add_widget();" value="<%= @counter %>">
                          اضافه کردن
                        </button>
                        <div id="form-input" hidden>
                          <%= render partial: '/expertise_widgets/form' , :locals => {:expertise => @expertise, :counter => @counter} %>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div><!-- /.main -->
    </div><!-- /.container -->
  </section>

  <footer id="footer">
    <div class="container">
      <div class="wrap">
        <%= link_to "بازگشت به استودیو", studio_photographer_path(@photographer.mobile_number), class: "btn btn-gray" %>
        <%= link_to  edit_shoot_type_photographer_path(@photographer.mobile_number,shoot_type_id: @shoot_type.id),class: "btn  btn-primary btn-xs" do %>
        <i class="fa fa-refresh"></i>
        به روز رسانی
        <% end %>
      </div>
    </div>
  </footer>


  <script type="text/javascript">
    var divs = ["Div1", "Div2"];
    var visibleDivId = null;
    function divVisibility(divId) {
      if(visibleDivId === divId) {
        visibleDivId = null;
      } else {
        visibleDivId = divId;
      }
      document.getElementById('button-'+divId).classList.add("btn-primary")
      document.getElementById('button-'+divId).classList.remove("btn-default")
      hideNonVisibleDivs();
    }
    function hideNonVisibleDivs() {
      var i, divId, div;
      for(i = 0; i < divs.length; i++) {
        divId = divs[i];
        div = document.getElementById(divId);
        if(visibleDivId === divId) {
          div.style.display = "block";
        } else {
          div.style.display = "none";
          document.getElementById('button-'+divId).classList.remove("btn-primary")
          document.getElementById('button-'+divId).classList.add("btn-default")
        }
      }
    }

    function remove_photo(id, url){
      console.log(url)
      $.ajax({
        data: {
          id: id,
        },
        dataType: 'json',
        async: false,
        success: function(){
          document.getElementById("remove-button-" + id).innerHTML = 'حذف شد !' ;
          document.getElementById("remove-button-" + id).classList.remove("btn-danger");
          document.getElementById("remove-button-" + id).classList.add("btn-gray");
          document.getElementById("remove-button-" + id).disabled = true
        },
        type: 'DELETE',
        url: url,
      })
    }

    function remove_attachment(id, url) {
      $.ajax({
        data: {
          id: id,
          expertise_id: <%= @expertise.id %>,
        },
        dataType: 'json',
        async: false,
        success: function(){
          document.getElementById("remove-button-attachment-" + id).innerHTML = 'حذف شد !';
          document.getElementById("remove-button-attachment-" + id).classList.remove("btn-danger");
          document.getElementById("remove-button-attachment-" + id).classList.add("btn-gray");
          document.getElementById("remove-button-attachment-" + id).disabled = true;
          document.getElementById("a-div-" + id).remove()
        },
        type: 'DELETE',
        url: url,
      })
    }

    function remove_widget(id, url) {
      $.ajax({
        data: {
          id: id,
        },
        dataType: 'json',
        async: false,
        success: function(){
          document.getElementById("remove-button-widget-" + id).innerHTML = 'حذف شد !';
          document.getElementById("remove-button-widget-" + id).classList.remove("btn-danger");
          document.getElementById("remove-button-widget-" + id).classList.add("btn-gray");
          document.getElementById("remove-button-widget-" + id).disabled = true;
          document.getElementById("tr-" + id).remove()
          // document.getElementById("tr-" + id).remove()
        },
        type: 'DELETE',
        url: url,
      })
    }

    function add_widget() {
      document.getElementById("form-input").hidden = false
      document.getElementById("add-button-form").hidden = true
    }

    function submit_widget(){
      document.getElementById('new_widget_form').submit();
    }

    function show_div_select_file(counter) {
      name = document.getElementById("widget_name_" + counter).value
      $.ajax({
        data: {
          name: name,
        },
        dataType: 'json',
        async: false,
        success: function(){
          // document.getElementById("widget_name_" + counter).disabled = true
          document.getElementById("filelist_" + counter).hidden = false
          document.getElementById("button-div-show_" + counter).hidden = true
          document.getElementById("div-submit_" + counter).hidden = false
          // document.getElementById("tr-" + id).remove()
        },
        type: 'POST',
        url: "/widgets",
      })
    }

    function show_div_file_list(counter) {
      if (document.getElementById("filelist_" + counter).hidden) {
        document.getElementById("filelist_" + counter).hidden = false
      } else{
        document.getElementById("filelist_" + counter).hidden = true
      }
    }



  </script>

  <script type="text/javascript">
    // new uploader
    $(document).ready(function(){

      $('#js-grid-masonry').cubeportfolio({
        filters: '#js-filters-masonry',
        layoutMode: 'grid',
        defaultFilter: '*',
        animationType: 'slideDelay',
        gapHorizontal: 20,
        gapVertical: 20,
        gridAdjustment: 'responsive',
        mediaQueries: [{
          width: 1500,
          cols: 5,
        }, {
          width: 1100,
          cols: 4,
        }, {
          width: 800,
          cols: 3,
        }, {
          width: 480,
          cols: 2,
          options: {
            caption: '',
            gapHorizontal: 3,
            gapVertical: 3,
          }
        }],
        caption: 'overlayBottomAlong',
        displayType: 'bottomToTop',
        displayTypeSpeed: 100,

        // lightbox
        lightboxDelegate: '.cbp-lightbox',
        lightboxGallery: true,
        lightboxTitleSrc: 'data-title',
        lightboxCounter: '<div class="cbp-popup-lightbox-counter">{{current}} of {{total}}</div>',
      });

      // Convert divs to queue widgets when the DOM is ready
      $(function() {

        $("#uploader").pluploadQueue({
          // General settings
          runtimes : 'html5,flash,silverlight,html4',
          url : '<%= receive_photo_expertise_path %>',
          chunk_size : '5mb',
          unique_names : true,


          filters : {
            max_file_size : '5mb',
            mime_types: [
            {title : "Image files", extensions : "jpg,jpeg"}
            ]
          },
          multipart_params : {
            "shoot_type_id" : <%= @expertise.shoot_type.id %>,
            "photographer_id"   : <%= @photographer.id %>
          },

          // Flash settings
          flash_swf_url : '/plupload/js/Moxie.swf',

          // Silverlight settings
          silverlight_xap_url : '/plupload/js/Moxie.xap',

          // PreInit events, bound before any internal events
          preinit : {
            Init: function(up, info) {
              log('[Init]', 'Info:', info, 'Features:', up.features);
            },

            UploadFile: function(up, file) {
              log('[UploadFile]', file);

              // You can override settings before the file is uploaded
              // up.setOption('url', 'upload.php?id=' + file.id);
              // up.setOption('multipart_params', {param1 : 'value1', param2 : 'value2'});
            }
          },

          // Post init events, bound after the internal events
          init : {
            PostInit: function() {
              // Called after initialization is finished and internal event handlers bound
              log('[PostInit]');

              // document.getElementById('uploadfiles').onclick = function() {
              //   uploader.start();
              //   return false;
              // };
            },

            Browse: function(up) {
              // Called when file picker is clicked
              log('[Browse]');
            },

            Refresh: function(up) {
              // Called when the position or dimensions of the picker change
              log('[Refresh]');
            },

            StateChanged: function(up) {
              // Called when the state of the queue is changed
              log('[StateChanged]', up.state == plupload.STARTED ? "STARTED" : "STOPPED");
            },

            QueueChanged: function(up) {
              // Called when queue is changed by adding or removing files
              log('[QueueChanged]');
            },

            OptionChanged: function(up, name, value, oldValue) {
              // Called when one of the configuration options is changed
              log('[OptionChanged]', 'Option Name: ', name, 'Value: ', value, 'Old Value: ', oldValue);
            },

            BeforeUpload: function(up, file) {
              // Called right before the upload for a given file starts, can be used to cancel it if required
              log('[BeforeUpload]', 'File: ', file);
            },

            UploadProgress: function(up, file) {
              // Called while file is being uploaded
              log('[UploadProgress]', 'File:', file, "Total:", up.total);
            },

            FileFiltered: function(up, file) {
              // Called when file successfully files all the filters
              log('[FileFiltered]', 'File:', file);
            },

            FilesAdded: function(up, files) {
              // Called when files are added to queue
              log('[FilesAdded]');

              plupload.each(files, function(file) {
                log('  File:', file);
              });
            },

            FilesRemoved: function(up, files) {
              // Called when files are removed from queue
              log('[FilesRemoved]');

              plupload.each(files, function(file) {
                log('  File:', file);
              });
            },

            FileUploaded: function(up, file, info) {
              // Called when file has finished uploading
              log('[FileUploaded] File:', file, "Info:", info);
            },

            ChunkUploaded: function(up, file, info) {
              // Called when file chunk has finished uploading
              log('[ChunkUploaded] File:', file, "Info:", info);
            },

            UploadComplete: function(up, files) {
              // Called when all files are either uploaded or failed
              log('[UploadComplete]');
            },

            Destroy: function(up) {
              // Called when uploader is destroyed
              log('[Destroy] ');
            },

            Error: function(up, args) {
              // Called when error occurs
              console.log(args.status);
              if (args.status == 406){
                alert("حجم فایل بیشتر از حد مجاز است.")
              }
              if (args.status == 401){
                alert("اگزیف عکس موجود نیست و یا اگزیف دارای سریال نامبر نمی باشد. لطفا عکس دارای اگزیف را آپلود کنید.")
              }
            }
          }
        });
        function log() {
          var str = "";

          plupload.each(arguments, function(arg) {
            var row = "";

            if (typeof(arg) != "string") {
              plupload.each(arg, function(value, key) {
                // Convert items in File objects to human readable form
                if (arg instanceof plupload.File) {
                  // Convert status to human readable
                  switch (value) {
                    case plupload.QUEUED:
                    value = 'QUEUED';
                    break;

                    case plupload.UPLOADING:
                    value = 'UPLOADING';
                    break;

                    case plupload.FAILED:
                    value = 'FAILED';
                    break;

                    case plupload.DONE:
                    value = 'DONE';
                    break;
                  }
                }

                if (typeof(value) != "function") {
                  row += (row ? ', ' : '') + key + '=' + value;
                }
              });

              str += row + " ";
            } else {
              str += arg + " ";
            }
          });

          var log = $('#log');
          log.append(str + "\n");
          // log.scrollTop(log[0].scrollHeight);
        }
      });

    });

  </script>
